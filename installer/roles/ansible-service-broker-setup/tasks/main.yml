---

# Copy all apb images from feedhenry repo to the dockerhub_org repo - unless that is set to feedhenry

- block:
  - name: List all public APB's in feedhenry docker org
    uri:
      url: "https://store.docker.com/v2/repositories/feedhenry/?name=-apb"
      return_content: yes
    register: apb_raw

  - name: Copy APB's from feedhenry docker org to {{ dockerhub_org }}
    shell: >
      docker login -u {{ dockerhub_username }} -p "{{ dockerhub_password }}" {{ dockerhost }} &&
      docker pull docker.io/feedhenry/{{ item.name }}:latest &&
      docker tag docker.io/feedhenry/{{ item.name }}:latest {{ dockerhost }}/{{ dockerhub_org }}/{{ item.name }}:latest &&
      docker push {{ dockerhost }}/{{ dockerhub_org }}/{{ item.name }}:latest
    loop_control:
      label: "{{ item.name }}"
    with_items:
      "{{ apb_raw.json.results }}"
    when:
      - item.name != skip_apb

  when:
    - dockerhub_org is defined
    - dockerhub_org != 'feedhenry'
    - apb_sync is defined
    - apb_sync

- block:
  - name: Ensure Ansible Service Broker install script is on host
    copy:
      src: ../files/provision-ansible-service-broker.sh
      dest: /tmp/

  - name: Make Ansible Service Broker install script executable
    file:
      dest: /tmp/provision-ansible-service-broker.sh
      mode: u+x

  - name: Execute Ansible Service Broker provision script
    shell: bash -e /tmp/provision-ansible-service-broker.sh "{{ dockerhub_username }}" "{{ dockerhub_password }}" "{{ dockerhub_org }}" "{{ launch_apb_on_bind }}" "{{dockerhub_tag}}"
  when:
  - dockerhub_tag is defined
  - dockerhub_tag != ''
  - dockerhub_username is defined
  - dockerhub_username != ''
  - dockerhub_password is defined
  - dockerhub_password != ''
  - dockerhub_org is defined
  - dockerhub_org != ''
  - launch_apb_on_bind is defined
  - launch_apb_on_bind != ''
  # - oc_get_broker.stderr.find('NotFound') > -1

- name: Ensure oc cluster is up
  shell: oc cluster status
  register: oc_cluster_status
  changed_when: false
  until: oc_cluster_status.rc == 0
  poll: 5
  retries: 30

- name: Get oc cluster status
  shell: oc cluster status
  register: oc_cluster_status
  changed_when: false

- debug:
    msg: "{{ oc_cluster_status.stdout_lines }}"
